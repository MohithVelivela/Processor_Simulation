package processor.pipeline;

import processor.Processor;

public class Execute {
	Control_Unit control_unit;
	Processor containingProcessor;
	OF_EX_LatchType OF_EX_Latch;
	EX_MA_LatchType EX_MA_Latch;
	EX_IF_LatchType EX_IF_Latch;
	
	public Execute(Processor containingProcessor, OF_EX_LatchType oF_EX_Latch, EX_MA_LatchType eX_MA_Latch, EX_IF_LatchType eX_IF_Latch)
	{
		this.containingProcessor = containingProcessor;
		this.OF_EX_Latch = oF_EX_Latch;
		this.EX_MA_Latch = eX_MA_Latch;
		this.EX_IF_Latch = eX_IF_Latch;
	}
	
	public void performEX() {
		//TODO
		if(OF_EX_Latch.isEX_enable()){
			// Branching part of the Execute Unit
			int BranchTarget = OF_EX_Latch.getBranchTarget();
			boolean IsBranchTaken = false;

			// Generating IsBranchTaken signal,the only signal generated by unit other than Control Unit.
			if(control_unit.isJmp() || control_unit.isBeq() || control_unit.isBgt() || control_unit.isBlt() || control_unit.isBne())
			{
				IsBranchTaken = true;
			}

			// Maybe this part should be changed(see this later regarding branchtarget of all kinds os branch statements.
			EX_IF_Latch.setBranchtarget(BranchTarget);
			EX_IF_Latch.setBranchTaken(IsBranchTaken); // to be continued .......




		}







	}


}
